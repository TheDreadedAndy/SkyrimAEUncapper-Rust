#
# Author: Kassent
# Author: Kasplat
#
# This is the default configuration file for the Skyrim Uncapper AE mod. Note
# that if this file is missing or outdated, warnings will be present in the
# log file. Check that file to determine if this one needs to be updated.
#
# This file will not be automatically updated. Additionally, the plugin itself
# will not alter this file; feel free to add any comments you want.
#

[General]

#
# Enables the code which uncap skill levels.
#
# Enables patches:
#   - GetSkillCap
#
bUseSkillCaps = true

#
# Enables the code which cap all skill formulas.
#
# Enables patches:
#   - PlayerAVOGetCurrent
#   - DisplayTrueSkillLevel
#   - DisplayTrueSkillColor
#
bUseSkillFormulaCaps = true

#
# Enables the code which fixes UI issues related to the formula cap patch.
#
# Without this patch, skills in the skills menu will show up as damaged when
# they are above the formula cap, and they also won't be able to show numbers
# above the the formula cap. This patch is incompatible with some
# mods, like meh321's custom skill framework, however.
#
# Enables patches:
#   - DisplayTrueSkillLevel
#   - DisplayTrueSkillColor
#
bUseSkillFormulaCapsUIFix = true

#
# Enables the code which patches to the enchantment charge cost calculation.
#
# Enables patches:
#   - BeginMaxChargeCalculation
#   - EndMaxChargeCalculation
#   - CalculateChargePointsPerUse
#
bUseEnchanterCaps = true

#
# Enables the code which applies the skill experience multipliers.
#
# Enables patches:
#   - ImprovePlayerSkillPoints
#
bUseSkillExpGainMults = true

#
# Enables the code which applies the level experience multipliers.
#
# Enables patches:
#   - ImproveLevelExpBySkillLevel
#
bUsePCLevelSkillExpMults = true

#
# Enables the code which modifies perk point gain.
#
# Enables patches:
#   - ModifyPerkPool
#
bUsePerksAtLevelUp = true

#
# Enables the code which modifies attribute point gain.
#
# Enables patches:
#   - ImproveAttributeWhenLevelUp
#
bUseAttributesAtLevelUp = true

#
# Enables the code which modifies the legendary skill system.
#
# Enables patches:
#   - LegendaryResetSkillLevel
#   - CheckConditionForLegendarySkill
#   - CheckConditionForLegendarySkillAlt
#   - HideLegendaryButton
#   - ClearLegendaryButton
#
bUseLegendarySettings = true

# Set the skill level cap. This option determines the upper limit of
# skill level you can reach.
[SkillCaps]
iOneHanded = 100
iTwoHanded = 100
iMarksman = 100
iBlock = 100
iSmithing = 100
iHeavyArmor = 100
iLightArmor = 100
iPickpocket = 100
iLockPicking = 100
iSneak = 100
iAlchemy = 100
iSpeechCraft = 100
iAlteration = 100
iConjuration = 100
iDestruction = 100
iIllusion = 100
iRestoration = 100
iEnchanting = 100

# Set the skill formula cap. This option determines the upper limit of
# skill level used in the calculation of all kinds of magic effects.
[SkillFormulaCaps]
iOneHanded = 100
iTwoHanded = 100
iMarksman = 100
iBlock = 100
iSmithing = 100
iHeavyArmor = 100
iLightArmor = 100
iPickpocket = 100
iLockPicking = 100
iSneak = 100
iAlchemy = 100
iSpeechCraft = 100
iAlteration = 100
iConjuration = 100
iDestruction = 100
iIllusion = 100
iRestoration = 100
iEnchanting = 100

[Enchanting]

# Sets the formula cap for the enchanting magnitude calculation.
# This value is also capped by the enchanting skill formula cap.
iMagnitudeLevelCap = 100

# Sets the formula cap for the enchanting weapon charge calculation.
# The formula breaks above level 199, so values above that will be ignored.
# This value is also capped by the enchanting skill formula cap.
iChargeLevelCap = 199

# Forces the game to use a smoothed formula for level-based weapon
# charge calculation. Note that the formula is not actually linear, the
# name of this setting is historical; the formula is actually quadratic.
#
# This setting is useful if the charge cap is close to 199, as the
# later level-ups in enchanting will give massive boosts to the number
# of charge points available.
#
# Note that smoothing this equation results in weapon charge values much more
# powerful than vanilla at lower levels.
bUseLinearChargeFormula = false

#
# Set the skill experience gained multiplier for base and offset.
#
# For compatibility reasons, the skill multiplier configuration sections accept
# three different formats for their values.
#     1) A single floating point number (e.g. 2.0). This will set the base
#        exp multiplier to the given value (2.0 in our example) and the offset
#        multiplier to 1.0.
#     2) A single float + a trailing '/' (e.g. 2.0/). This will set both the
#        exp base and exp offset multipliers to the given value (2.0 in our
#        example).
#     3) Two floating point numbers, separated by a '/' (e.g. 2.0/3.0). This
#        will set the exp base mult to the first number and the exp offset mult
#        to the second number. In our example, the base mult would be 2.0 and
#        the offset mult would be 3.0.
#
# Note that the game applies its own multipliers to the exp base value. For
# example, enchanting has a base multiplier of 900 in an unmodified game.
#
# The skill experience you gain is actually:
# <final exp> = <vanilla base> * <skill base mult> * <specific skill base mult>
#             + <vanilla offset> * <skill offset mult> * <specific skill offset mult>
#
[SkillExpGainMults]
fOneHanded = 1.000000
fTwoHanded = 1.000000
fMarksman = 1.000000
fBlock = 1.000000
fSmithing = 1.000000
fHeavyArmor = 1.000000
fLightArmor = 1.000000
fPickpocket = 1.000000
fLockPicking = 1.000000
fSneak = 1.000000
fAlchemy = 1.000000
fSpeechCraft = 1.000000
fAlteration = 1.000000
fConjuration = 1.000000
fDestruction = 1.000000
fIllusion = 1.000000
fRestoration = 1.000000
fEnchanting = 1.000000


# All the subsections of SkillExpGainMults below allow you to set an
# additional multiplier depending on BASE SKILL LEVEL, independantly
# for each skill.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[SkillExpGainMults\BaseSkillLevel\OneHanded]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\TwoHanded]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Marksman]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Block]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Smithing]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\HeavyArmor]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\LightArmor]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Pickpocket]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\LockPicking]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Sneak]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Alchemy]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\SpeechCraft]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Alteration]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Conjuration]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Destruction]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Illusion]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Restoration]
0 = 1.000000

[SkillExpGainMults\BaseSkillLevel\Enchanting]
0 = 1.000000

# All the subsections of SkillExpGainMults below allow you to set an
# additional multiplier depending on CHARACTER LEVEL, independantly
# for each skill.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[SkillExpGainMults\CharacterLevel\OneHanded]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\TwoHanded]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Marksman]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Block]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Smithing]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\HeavyArmor]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\LightArmor]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Pickpocket]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\LockPicking]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Sneak]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Alchemy]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\SpeechCraft]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Alteration]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Conjuration]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Destruction]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Illusion]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Restoration]
0 = 1.000000

[SkillExpGainMults\CharacterLevel\Enchanting]
0 = 1.000000

# Set the skill experience to player level experience multipliers. When you
# level up a skill, the player level experience gained is:
# <exp> = <base skill level> * <level exp mult> * <specific level exp mult>
[LevelSkillExpMults]
fOneHanded = 1.000000
fTwoHanded = 1.000000
fMarksman = 1.000000
fBlock = 1.000000
fSmithing = 1.000000
fHeavyArmor = 1.000000
fLightArmor = 1.000000
fPickpocket = 1.000000
fLockPicking = 1.000000
fSneak = 1.000000
fAlchemy = 1.000000
fSpeechCraft = 1.000000
fAlteration = 1.000000
fConjuration = 1.000000
fDestruction = 1.000000
fIllusion = 1.000000
fRestoration = 1.000000
fEnchanting = 1.000000

# All the subsections of LevelSkillExpMults below allow you to set an
# additional multiplier depending on BASE SKILL LEVEL, independantly
# for each skill.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[LevelSkillExpMults\BaseSkillLevel\OneHanded]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\TwoHanded]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Marksman]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Block]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Smithing]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\HeavyArmor]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\LightArmor]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Pickpocket]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\LockPicking]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Sneak]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Alchemy]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\SpeechCraft]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Alteration]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Conjuration]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Destruction]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Illusion]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Restoration]
0 = 1.000000

[LevelSkillExpMults\BaseSkillLevel\Enchanting]
0 = 1.000000

# All the subsections of LevelSkillExpMults below allow to set an
# additional multipliers depending on CHARACTER LEVEL, independantly
# for each skill.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[LevelSkillExpMults\CharacterLevel\OneHanded]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\TwoHanded]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Marksman]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Block]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Smithing]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\HeavyArmor]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\LightArmor]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Pickpocket]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\LockPicking]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Sneak]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Alchemy]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\SpeechCraft]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Alteration]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Conjuration]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Destruction]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Illusion]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Restoration]
0 = 1.000000

[LevelSkillExpMults\CharacterLevel\Enchanting]
0 = 1.000000

# Set the number of perks gained at each level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[PerksAtLevelUp]
0 = 1.000000

# Set the number of health gained at each health level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[HealthAtLevelUp]
0 = 10

# Set the number of health gained at each magicka level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[HealthAtMagickaLevelUp]
0 = 0

# Set the number of health gained at each stamina level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[HealthAtStaminaLevelUp]
0 = 0

# Set the number of magicka gained at each magicka level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[MagickaAtLevelUp]
0 = 10

# Set the number of magicka gained at each health level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[MagickaAtHealthLevelUp]
0 = 0

# Set the number of magicka gained at each stamina level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[MagickaAtStaminaLevelUp]
0 = 0

# Set the number of stamina gained at each stamina level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[StaminaAtLevelUp]
0 = 10

# Set the number of stamina gained at each health level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[StaminaAtHealthLevelUp]
0 = 0

# Set the number of stamina gained at each magicka level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[StaminaAtMagickaLevelUp]
0 = 0

# Set the number of carryweight gained at each health level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[CarryWeightAtHealthLevelUp]
0 = 0

# Set the number of carryweight gained at each magicka level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[CarryWeightAtMagickaLevelUp]
0 = 0

# Set the number of carryweight gained at each stamina level up.
#
# If a specific level is not specified, then the
# value for the closest lower level is used.
[CarryWeightAtStaminaLevelUp]
0 = 5

[LegendarySkill]

# This option determines whether the legendary feature will reset the
# skill level. Setting this option to true will make the option
# "iSkillLevelAfterLegendary" have no effect.
bLegendaryKeepSkillLevel = false

# This option determines whether to hide the legendary button in "Skills"
# menu when you meet the requirements to legendary a skill.
# If you set "iSkillLevelEnableLegendary" to below 100, the legendary
# button will not show up, but you can make skills legendary normally
# by pressing SPACE.
bHideLegendaryButton = false

# This option determines the skill level required to make a skill legendary.
iSkillLevelEnableLegendary = 100

# This option determines the level of a skill after making it legendary.
# Setting this option to 0 will reset the skill level to default level.
iSkillLevelAfterLegendary = 0
